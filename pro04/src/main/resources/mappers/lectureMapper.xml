<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ed.haebeop.persistence.LectureMapper">
    <select id="lectureList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT lcode, lname, sname, tname, lcontent, lprice, maxStudent, sdate, edate, stime, l.saveFile as saveFile, state, classroom
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
            AND state != 'close'
        </where>
        order by sdate limit #{postStart}, #{postCount}
    </select>

    <!-- lecture의 전체 개수 구하기 -->
    <select id="getCount" resultType="integer">
        select count(*) FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
        </where>
    </select>
    
    <select id="lectureDetail" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT lcode, lname, l.scode as scode, sname, l.tcode as tcode, tname, lcontent, lprice, maxStudent, sdate, edate, stime, l.saveFile as saveFile, state, classroom
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        WHERE lcode = #{lcode}
    </select>

    <select id="lectureCount" resultType="integer">
        select count(*) from lecture
    </select>

    <update id="lectureEdit">
        update lecture set lname=#{lname}, scode=#{scode}, tcode=#{tcode}, lcontent=#{lcontent}, lprice=#{lprice}, maxStudent=#{maxStudent}, sdate=#{sdate}, edate=#{edate}, stime=#{stime}, saveFile=#{saveFile}, state=#{state}, classroom=#{classroom}
        where lcode=#{lcode}
    </update>

    <insert id="lectureInsert">
        insert into lecture
        values(#{lcode}, #{lname}, #{scode}, #{tcode}, #{lcontent}, #{lprice}, #{maxStudent}, #{saveFile}, #{sdate}, #{edate}, #{stime}, #{state}, #{classroom})
    </insert>

    <!-- 폐강 위기 과목 목록 -->
    <select id="closeList" resultType="kr.ed.haebeop.domain.CloseLecture">
        <![CDATA[
        SELECT l.lcode as lcode, sname, lname, sdate, edate, COUNT(*) AS 'regCnt', state FROM lecture l JOIN subject s ON (l.scode=s.scode) left outer JOIN register r ON (r.lcode=l.lcode)
        WHERE sdate BETWEEN CURRENT_DATE AND (CURRENT_DATE + 7) AND state IN ('off','close') GROUP BY r.lcode HAVING COUNT(*) < 5
            ORDER BY sdate limit #{postStart}, #{postCount}
        ]]>
    </select>

    <select id="getCloseCount" resultType="int">
        <![CDATA[
        SELECT COUNT(lcode) FROM (
        SELECT l.lcode, COUNT(*) FROM lecture l left outer JOIN register r ON (r.lcode=l.lcode)
        WHERE sdate BETWEEN CURRENT_DATE AND (CURRENT_DATE + 7) AND state IN ('off','close') GROUP BY r.lcode HAVING COUNT(*) < 5) AS a
        ]]>
    </select>

    <update id="closeLecture">
        UPDATE lecture SET state=#{state} where lcode=#{lcode}
    </update>

    <select id="subjects" resultType="kr.ed.haebeop.domain.Subject">
        select * from subject order by sname
    </select>

    <select id="comparePeriod" resultType="boolean">
        <![CDATA[
            SELECT (sdate < CURRENT_DATE) FROM lecture WHERE lcode=#{lcode}
        ]]>
    </select>

    <select id="popularLectureList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT l.lcode AS lcode, lname, tname, l.saveFile AS saveFile
        FROM lecture l JOIN register r ON (l.lcode=r.lcode) JOIN teacher t ON (l.tcode=t.tcode) GROUP BY l.lcode
        ORDER BY COUNT(*) DESC LIMIT 6
    </select>

    <select id="stateLectureList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT l.lcode AS lcode, lname, tname, l.saveFile AS saveFile FROM lecture l JOIN teacher t ON (l.tcode=t.tcode)
        WHERE state=#{state} ORDER BY RAND() LIMIT 6
    </select>

</mapper>