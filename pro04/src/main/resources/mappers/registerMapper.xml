<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ed.haebeop.persistence.RegisterMapper">

    <select id="isReg" resultType="boolean" parameterType="hashMap">
        SELECT if(COUNT(*)=1, false, true) FROM register WHERE lcode=#{lcode} AND id=#{id}
    </select>

    <select id="isMaxStudent" resultType="boolean" parameterType="hashMap">
        SELECT IF(maxStudent=COUNT(*), FALSE, TRUE) FROM register r JOIN lecture l ON (r.lcode=l.lcode) GROUP BY r.lcode HAVING r.lcode=#{lcode}
        UNION ALL
        SELECT true AS result FROM DUAL LIMIT 1;
    </select>

    <insert id="registerInsert" parameterType="hashMap">
        insert into register values(default, #{lcode}, #{id}, default);
    </insert>

    <select id="isPeriod" resultType="int">
        SELECT COUNT(*) FROM lecture WHERE lcode=#{lcode} AND CURRENT_DATE BETWEEN sdate AND edate
    </select>

    <select id="myLectures" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT l.lcode as lcode, lname, sname, tname, lcontent, lprice, maxStudent, sdate, edate, stime, l.saveFile as saveFile, state, classroom
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode) JOIN register r ON (r.lcode = l.lcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
            AND id = #{id}
        </where>
        order by sdate limit #{postStart}, #{postCount}
    </select>

    <select id="progressList" resultType="kr.ed.haebeop.domain.UserProgress">
        SELECT a.lcode AS lcode, lname, lcontent, state, lecCnt, stdCnt, (stdCnt/lecCnt)*100 AS progress
        FROM (SELECT lcode, COUNT(*) AS lecCnt FROM curriculum GROUP BY lcode) as a
                 JOIN (SELECT lcode, COUNT(*) AS stdCnt FROM studyInfo s JOIN curriculum c ON (s.ccode = c.ccode) WHERE id=#{id} AND completed = 1 GROUP BY lcode) AS b ON (a.lcode = b.lcode)
                 JOIN lecture l ON (a.lcode = l.lcode)
        ORDER BY scode DESC LIMIT 4
    </select>

    <select id="regStudentCnt" resultType="int">
        select count(*) from register where lcode=#{lcode}
    </select>

    <select id="yearProfit" resultType="hashMap">
        SELECT label, SUM(profit) AS profit FROM
            (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 YEAR), '%Y') AS label, 0 AS profit FROM dual
             UNION ALL
             SELECT DATE_FORMAT(sdate, '%Y') AS label, SUM(lprice) AS profit FROM lecture l JOIN register r ON (l.lcode=r.lcode)
             WHERE sdate >= DATE_ADD(NOW(), INTERVAL -1 YEAR)
             GROUP BY DATE_FORMAT(sdate, '%Y')) a
        GROUP BY label
    </select>

    <select id="payProfit" resultType="hashMap">
        SELECT label, SUM(profit) AS profit FROM
            (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 MONTH), '%Y-%m') AS label, 0 AS profit FROM dual
             UNION ALL
             SELECT DATE_FORMAT(resdate, '%Y-%m') AS label, SUM(amount) AS profit FROM payment
             WHERE resdate >= DATE_ADD(NOW(), INTERVAL -1 YEAR)
             GROUP BY DATE_FORMAT(resdate, '%Y-%m')
             UNION all
             SELECT DATE_FORMAT(NOW(), '%Y-%m') AS label, 0 AS profit FROM dual) a
        GROUP BY label
    </select>

    <select id="popularLectures" resultType="kr.ed.haebeop.domain.PopularLecture">
        SELECT reg.lcode as lcode, lname, lprice, saveFile, IFNULL(ROUND(AVG(star)), 0) AS star FROM lecture lec JOIN register reg ON (lec.lcode=reg.lcode) LEFT OUTER JOIN review rev ON (lec.lcode=rev.lcode)
        GROUP BY reg.lcode ORDER BY COUNT(reg.lcode) DESC LIMIT 6
    </select>

    <select id="ongoingMyLecture" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT l.lcode AS lcode, lname, stime, classroom, state FROM lecture l JOIN register r ON (l.lcode=r.lcode)
        WHERE id=#{id} AND CURRENT_DATE BETWEEN sdate AND edate
    </select>

</mapper>